% FACT: program(program_id, program_name, qualified_program_name, begin_annotation_id, end_annotation_id).
program(1, 'SPOriginalOR2#', 'SPOriginalOR2#', 1, 48).
program(2, 'core/text-transform0#', 'SPOriginalOR2#/core/text-transform0#', 12, 18).
program(3, 'core/text-transform1#', 'SPOriginalOR2#/core/text-transform1#', 19, 25).
program(4, 'core/text-transform2#', 'SPOriginalOR2#/core/text-transform2#', 26, 32).
program(5, 'core/text-transform3#', 'SPOriginalOR2#/core/text-transform3#', 33, 39).
program(6, 'MergeOperationsColumns', 'SPOriginalOR2#/MergeOperationsColumns', 40, 47).

% FACT: workflow(program_id).
workflow(1).

% FACT: function(program_id).

% FACT: has_subprogram(program_id, subprogram_id).
has_subprogram(1, 2).
has_subprogram(1, 3).
has_subprogram(1, 4).
has_subprogram(1, 5).
has_subprogram(1, 6).

% FACT: port(port_id, port_type, port_name, qualified_port_name, port_annotation_id, data_id).
port(1, 'param', 'expression:value.toDate()', 'SPOriginalOR2#<-expression:value.toDate()', 3, 1).
port(2, 'param', 'col-name:place', 'SPOriginalOR2#<-col-name:place', 4, 2).
port(3, 'param', 'col-name:sponsor', 'SPOriginalOR2#<-col-name:sponsor', 5, 3).
port(4, 'param', 'expression:value.toLowercase()', 'SPOriginalOR2#<-expression:value.toLowercase()', 6, 4).
port(5, 'param', 'expression:value.toNumber()', 'SPOriginalOR2#<-expression:value.toNumber()', 7, 5).
port(6, 'param', 'col-name:id', 'SPOriginalOR2#<-col-name:id', 8, 6).
port(7, 'param', 'col-name:date', 'SPOriginalOR2#<-col-name:date', 9, 7).
port(8, 'in', 'table0', 'SPOriginalOR2#<-table0', 10, 8).
port(9, 'out', 'table1', 'SPOriginalOR2#->table1', 11, 9).
port(10, 'param', 'col-name:date', 'SPOriginalOR2#/core/text-transform0#<-col-name:date', 14, 10).
port(11, 'param', 'expression:value.toDate()', 'SPOriginalOR2#/core/text-transform0#<-expression:value.toDate()', 15, 11).
port(12, 'in', 'table0', 'SPOriginalOR2#/core/text-transform0#<-table0', 16, 12).
port(13, 'out', 'col:date1', 'SPOriginalOR2#/core/text-transform0#->col:date1', 17, 13).
port(14, 'param', 'col-name:id', 'SPOriginalOR2#/core/text-transform1#<-col-name:id', 21, 14).
port(15, 'param', 'expression:value.toNumber()', 'SPOriginalOR2#/core/text-transform1#<-expression:value.toNumber()', 22, 15).
port(16, 'in', 'table0', 'SPOriginalOR2#/core/text-transform1#<-table0', 23, 12).
port(17, 'out', 'col:id1', 'SPOriginalOR2#/core/text-transform1#->col:id1', 24, 16).
port(18, 'param', 'col-name:place', 'SPOriginalOR2#/core/text-transform2#<-col-name:place', 28, 17).
port(19, 'param', 'expression:value.toLowercase()', 'SPOriginalOR2#/core/text-transform2#<-expression:value.toLowercase()', 29, 18).
port(20, 'in', 'table0', 'SPOriginalOR2#/core/text-transform2#<-table0', 30, 12).
port(21, 'out', 'col:place1', 'SPOriginalOR2#/core/text-transform2#->col:place1', 31, 19).
port(22, 'param', 'col-name:sponsor', 'SPOriginalOR2#/core/text-transform3#<-col-name:sponsor', 35, 20).
port(23, 'param', 'expression:value.toLowercase()', 'SPOriginalOR2#/core/text-transform3#<-expression:value.toLowercase()', 36, 18).
port(24, 'in', 'table0', 'SPOriginalOR2#/core/text-transform3#<-table0', 37, 12).
port(25, 'out', 'col:sponsor1', 'SPOriginalOR2#/core/text-transform3#->col:sponsor1', 38, 21).
port(26, 'in', 'col:date1', 'SPOriginalOR2#/MergeOperationsColumns<-col:date1', 42, 13).
port(27, 'in', 'col:id1', 'SPOriginalOR2#/MergeOperationsColumns<-col:id1', 43, 16).
port(28, 'in', 'col:place1', 'SPOriginalOR2#/MergeOperationsColumns<-col:place1', 44, 19).
port(29, 'in', 'col:sponsor1', 'SPOriginalOR2#/MergeOperationsColumns<-col:sponsor1', 45, 21).
port(30, 'out', 'table1', 'SPOriginalOR2#/MergeOperationsColumns->table1', 46, 22).

% FACT: port_alias(port_id, alias).

% FACT: port_uri_template(port_id, uri).

% FACT: has_in_port(block_id, port_id).
has_in_port(1, 1).
has_in_port(1, 2).
has_in_port(1, 3).
has_in_port(1, 4).
has_in_port(1, 5).
has_in_port(1, 6).
has_in_port(1, 7).
has_in_port(1, 8).
has_in_port(2, 10).
has_in_port(2, 11).
has_in_port(2, 12).
has_in_port(3, 14).
has_in_port(3, 15).
has_in_port(3, 16).
has_in_port(4, 18).
has_in_port(4, 19).
has_in_port(4, 20).
has_in_port(5, 22).
has_in_port(5, 23).
has_in_port(5, 24).
has_in_port(6, 26).
has_in_port(6, 27).
has_in_port(6, 28).
has_in_port(6, 29).

% FACT: has_out_port(block_id, port_id).
has_out_port(1, 9).
has_out_port(2, 13).
has_out_port(3, 17).
has_out_port(4, 21).
has_out_port(5, 25).
has_out_port(6, 30).

% FACT: data(data_id, data_name, qualified_data_name).
data(1, 'expression:value.toDate()', 'expression:value.toDate()').
data(2, 'col-name:place', 'col-name:place').
data(3, 'col-name:sponsor', 'col-name:sponsor').
data(4, 'expression:value.toLowercase()', 'expression:value.toLowercase()').
data(5, 'expression:value.toNumber()', 'expression:value.toNumber()').
data(6, 'col-name:id', 'col-name:id').
data(7, 'col-name:date', 'col-name:date').
data(8, 'table0', 'table0').
data(9, 'table1', 'table1').
data(10, 'col-name:date', 'SPOriginalOR2#.col-name:date').
data(11, 'expression:value.toDate()', 'SPOriginalOR2#.expression:value.toDate()').
data(12, 'table0', 'SPOriginalOR2#.table0').
data(13, 'col:date1', 'SPOriginalOR2#.col:date1').
data(14, 'col-name:id', 'SPOriginalOR2#.col-name:id').
data(15, 'expression:value.toNumber()', 'SPOriginalOR2#.expression:value.toNumber()').
data(16, 'col:id1', 'SPOriginalOR2#.col:id1').
data(17, 'col-name:place', 'SPOriginalOR2#.col-name:place').
data(18, 'expression:value.toLowercase()', 'SPOriginalOR2#.expression:value.toLowercase()').
data(19, 'col:place1', 'SPOriginalOR2#.col:place1').
data(20, 'col-name:sponsor', 'SPOriginalOR2#.col-name:sponsor').
data(21, 'col:sponsor1', 'SPOriginalOR2#.col:sponsor1').
data(22, 'table1', 'SPOriginalOR2#.table1').

% FACT: channel(channel_id, data_id).
channel(1, 9).
channel(2, 10).
channel(3, 11).
channel(4, 12).
channel(5, 12).
channel(6, 12).
channel(7, 12).
channel(8, 14).
channel(9, 15).
channel(10, 17).
channel(11, 18).
channel(12, 18).
channel(13, 20).
channel(14, 13).
channel(15, 16).
channel(16, 19).
channel(17, 21).
channel(18, 1).
channel(19, 2).
channel(20, 3).
channel(21, 4).
channel(22, 4).
channel(23, 5).
channel(24, 6).
channel(25, 7).
channel(26, 8).
channel(27, 8).
channel(28, 8).
channel(29, 8).
channel(30, 22).

% FACT: port_connects_to_channel(port_id, channel_id).
port_connects_to_channel(30, 1).
port_connects_to_channel(10, 2).
port_connects_to_channel(11, 3).
port_connects_to_channel(12, 4).
port_connects_to_channel(16, 5).
port_connects_to_channel(20, 6).
port_connects_to_channel(24, 7).
port_connects_to_channel(14, 8).
port_connects_to_channel(15, 9).
port_connects_to_channel(18, 10).
port_connects_to_channel(19, 11).
port_connects_to_channel(23, 12).
port_connects_to_channel(22, 13).
port_connects_to_channel(13, 14).
port_connects_to_channel(26, 14).
port_connects_to_channel(17, 15).
port_connects_to_channel(27, 15).
port_connects_to_channel(21, 16).
port_connects_to_channel(28, 16).
port_connects_to_channel(25, 17).
port_connects_to_channel(29, 17).
port_connects_to_channel(11, 18).
port_connects_to_channel(18, 19).
port_connects_to_channel(22, 20).
port_connects_to_channel(19, 21).
port_connects_to_channel(23, 22).
port_connects_to_channel(15, 23).
port_connects_to_channel(14, 24).
port_connects_to_channel(10, 25).
port_connects_to_channel(12, 26).
port_connects_to_channel(16, 27).
port_connects_to_channel(20, 28).
port_connects_to_channel(24, 29).
port_connects_to_channel(30, 30).

% FACT: inflow_connects_to_channel(port_id, channel_id).
inflow_connects_to_channel(7, 2).
inflow_connects_to_channel(1, 3).
inflow_connects_to_channel(8, 4).
inflow_connects_to_channel(8, 5).
inflow_connects_to_channel(8, 6).
inflow_connects_to_channel(8, 7).
inflow_connects_to_channel(6, 8).
inflow_connects_to_channel(5, 9).
inflow_connects_to_channel(2, 10).
inflow_connects_to_channel(4, 11).
inflow_connects_to_channel(4, 12).
inflow_connects_to_channel(3, 13).
inflow_connects_to_channel(1, 18).
inflow_connects_to_channel(2, 19).
inflow_connects_to_channel(3, 20).
inflow_connects_to_channel(4, 21).
inflow_connects_to_channel(4, 22).
inflow_connects_to_channel(5, 23).
inflow_connects_to_channel(6, 24).
inflow_connects_to_channel(7, 25).
inflow_connects_to_channel(8, 26).
inflow_connects_to_channel(8, 27).
inflow_connects_to_channel(8, 28).
inflow_connects_to_channel(8, 29).

% FACT: outflow_connects_to_channel(port_id, channel_id).
outflow_connects_to_channel(9, 1).
outflow_connects_to_channel(9, 30).

% FACT: uri_variable(uri_variable_id, variable_name, port_id).

% FACT: log_template(log_template_id, port_id, entry_template, log_annotation_id).

% FACT: log_template_variable(log_variable_id, variable_name, log_template_id).

% FACT: assert(program_id, subject_id, predicate, object_id).

